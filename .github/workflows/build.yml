name: PUSH Workflow

on:
  push:
    branches:
      - master

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          # MYSQL_DATABASE: unit_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.3
          extensions: mbstring, bcmath
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -n --prefer-dist
      # - name: Install NPM Dependencies
      #   run: npm install
      - name: Generate Key
        run: php artisan key:generate
      # - name: Execute tests (Unit and Feature tests) via PHPUnit
      #   env:
      #     DB_PORT: ${{ job.services.mysql.ports[3306] }}
      #   run: |
      #     vendor/bin/phpunit
  # build-js-production:
  #   name: Build JavaScript/CSS for PRODUCTION Server
  #   runs-on: ubuntu-latest
  #   needs: app-tests
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: NPM Build
  #       run: |
  #         npm install
  #         npm run prod
  #     - name: Put built assets in Artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: assets
  #         path: public
  deploy-production:
    name: Deploy Project to PRODUCTION Server
    runs-on: ubuntu-latest
    needs: [app-tests]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd /var/www/html/fccpc
          git pull
          composer install
          php artisan migrate
          cd /var/www/html/fccpc-demo
          git pull
          composer install
          php artisan migrate --no-interaction
